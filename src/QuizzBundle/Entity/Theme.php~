<?php

namespace QuizzBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Theme
 *
 * @ORM\Table(name="theme")
 * @ORM\Entity(repositoryClass="QuizzBundle\Repository\ThemeRepository")
 */
class Theme
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    private $name;

    /**
     * @ORM\ManyToOne(targetEntity="Category", inversedBy="theme")
     * @ORM\JoinColumn(name="category_id", referencedColumnName="id")
     */
    private $category;

    /**
     *
     * @var boolean
     *
     * @ORM\Column(name="status", type="boolean", options={"default" = 0}))
     */
    private $status;

    /**
     * @ORM\OneToMany(targetEntity="Quizz", mappedBy="theme")
     */
    private $quizz;

    /**
     * @ORM\OneToMany(targetEntity="UserBundle\Entity\Score", mappedBy="theme")
     */
    private $score;


    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return Theme
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set category
     *
     * @param \QuizzBundle\Entity\Category $category
     *
     * @return Theme
     */
    public function setCategory(\QuizzBundle\Entity\Category $category = null)
    {
        $this->category = $category;

        return $this;
    }

    /**
     * Get category
     *
     * @return \QuizzBundle\Entity\Category
     */
    public function getCategory()
    {
        return $this->category;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->quizz = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add quizz
     *
     * @param \QuizzBundle\Entity\Quizz $quizz
     *
     * @return Theme
     */
    public function addQuizz(\QuizzBundle\Entity\Quizz $quizz)
    {
        $this->quizz[] = $quizz;

        return $this;
    }

    /**
     * Remove quizz
     *
     * @param \QuizzBundle\Entity\Quizz $quizz
     */
    public function removeQuizz(\QuizzBundle\Entity\Quizz $quizz)
    {
        $this->quizz->removeElement($quizz);
    }

    /**
     * Get quizz
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getQuizz()
    {
        return $this->quizz;
    }

    /**
     * Set status
     *
     * @param boolean $status
     *
     * @return Theme
     */
    public function setStatus($status)
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Get status
     *
     * @return boolean
     */
    public function getStatus()
    {
        return $this->status;
    }
}
